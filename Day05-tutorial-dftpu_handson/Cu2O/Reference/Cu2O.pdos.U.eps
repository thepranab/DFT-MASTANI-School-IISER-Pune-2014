%!PS-Adobe-2.0 EPSF-2.0
%%Title: Cu2O.pdos.U.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Mon Jun 18 10:07:54 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Cu2O.pdos.U.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Burak,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jun 18 10:07:54 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1224 768 M
63 0 V
5649 0 R
-63 0 V
stroke
1080 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
1224 1237 M
63 0 V
5649 0 R
-63 0 V
stroke
1080 1237 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
1.000 UL
LTb
1224 1705 M
63 0 V
5649 0 R
-63 0 V
stroke
1080 1705 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2)]
] -80.0 MRshow
1.000 UL
LTb
1224 2174 M
63 0 V
5649 0 R
-63 0 V
stroke
1080 2174 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 3)]
] -80.0 MRshow
1.000 UL
LTb
1224 2643 M
63 0 V
5649 0 R
-63 0 V
stroke
1080 2643 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 4)]
] -80.0 MRshow
1.000 UL
LTb
1224 3112 M
63 0 V
5649 0 R
-63 0 V
stroke
1080 3112 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 5)]
] -80.0 MRshow
1.000 UL
LTb
1224 3580 M
63 0 V
5649 0 R
-63 0 V
stroke
1080 3580 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 6)]
] -80.0 MRshow
1.000 UL
LTb
1224 4049 M
63 0 V
5649 0 R
-63 0 V
stroke
1080 4049 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 7)]
] -80.0 MRshow
1.000 UL
LTb
1224 4518 M
63 0 V
5649 0 R
-63 0 V
stroke
1080 4518 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 8)]
] -80.0 MRshow
1.000 UL
LTb
1224 768 M
0 63 V
0 3921 R
0 -63 V
stroke
1224 528 M
[ [(Helvetica) 240.0 0.0 true true 0 (-2)]
] -80.0 MCshow
1.000 UL
LTb
1896 768 M
0 63 V
0 3921 R
0 -63 V
stroke
1896 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
2568 768 M
0 63 V
0 3921 R
0 -63 V
stroke
2568 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2)]
] -80.0 MCshow
1.000 UL
LTb
3240 768 M
0 63 V
0 3921 R
0 -63 V
stroke
3240 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 4)]
] -80.0 MCshow
1.000 UL
LTb
3912 768 M
0 63 V
0 3921 R
0 -63 V
stroke
3912 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 6)]
] -80.0 MCshow
1.000 UL
LTb
4584 768 M
0 63 V
0 3921 R
0 -63 V
stroke
4584 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 8)]
] -80.0 MCshow
1.000 UL
LTb
5256 768 M
0 63 V
0 3921 R
0 -63 V
stroke
5256 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MCshow
1.000 UL
LTb
5928 768 M
0 63 V
0 3921 R
0 -63 V
stroke
5928 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 12)]
] -80.0 MCshow
1.000 UL
LTb
6600 768 M
0 63 V
0 3921 R
0 -63 V
stroke
6600 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 14)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -3984 V
5712 0 V
0 3984 V
-5712 0 V
Z stroke
LCb setrgbcolor
528 2760 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (DOS \(states/eV/atom\))]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
4080 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (E \(eV\))]
] -80.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
3.000 UL
LT1
LC2 setrgbcolor
LTb
5865 4569 M
[ [(Helvetica) 240.0 0.0 true true 0 (Cu-d)]
] -80.0 MRshow
LT1
LC2 setrgbcolor
6009 4569 M
639 0 V
1224 768 M
27 0 V
33 0 V
34 0 V
33 0 V
34 10 V
34 28 V
33 -19 V
34 -17 V
33 21 V
34 127 V
34 68 V
33 11 V
34 -5 V
33 167 V
34 1 V
34 -17 V
33 173 V
34 -181 V
33 -47 V
34 116 V
34 26 V
33 -20 V
34 -232 V
33 -97 V
34 352 V
34 411 V
33 254 V
34 -71 V
33 -33 V
34 -332 V
34 42 V
33 136 V
34 -239 V
33 286 V
34 393 V
34 -196 V
33 -90 V
34 338 V
33 530 V
34 -14 V
34 -90 V
33 -271 V
34 168 V
33 469 V
34 -314 V
34 -66 V
33 563 V
34 169 V
33 -788 V
34 -914 V
34 -550 V
33 -199 V
34 27 V
33 -56 V
34 -27 V
34 -1 V
33 0 V
34 7 V
33 14 V
34 -11 V
34 26 V
33 125 V
34 97 V
33 -132 V
34 -87 V
34 154 V
33 69 V
34 -29 V
33 1 V
34 -100 V
34 -78 V
33 68 V
34 39 V
33 -88 V
34 132 V
34 95 V
33 -203 V
34 -30 V
33 74 V
34 108 V
34 14 V
33 -202 V
34 77 V
33 362 V
34 -113 V
34 -280 V
33 -10 V
34 14 V
33 1 V
34 -62 V
34 -24 V
33 -20 V
34 -8 V
33 0 V
34 0 V
34 0 V
33 0 V
34 3 V
33 3 V
34 -5 V
34 -1 V
33 0 V
stroke 4644 768 M
34 0 V
33 0 V
34 0 V
34 5 V
33 20 V
34 -9 V
33 -15 V
34 -1 V
34 0 V
33 12 V
34 33 V
33 -22 V
34 -21 V
34 -2 V
33 5 V
34 19 V
33 -7 V
34 -15 V
34 -1 V
33 12 V
34 19 V
33 35 V
34 -15 V
34 -26 V
33 -20 V
34 0 V
33 7 V
34 7 V
34 18 V
33 -21 V
34 -16 V
33 7 V
34 21 V
34 2 V
33 -11 V
34 -6 V
33 -2 V
34 -5 V
34 3 V
33 1 V
34 -5 V
33 14 V
34 -9 V
34 -10 V
33 -1 V
34 1 V
33 3 V
34 10 V
34 -4 V
33 -5 V
34 -2 V
33 -2 V
34 -1 V
34 0 V
33 0 V
34 0 V
33 1 V
34 1 V
34 -1 V
33 -1 V
34 0 V
33 0 V
34 0 V
34 0 V
33 0 V
34 0 V
33 0 V
34 0 V
7 0 V
stroke
LT0
LC0 setrgbcolor
LTb
5865 4329 M
[ [(Helvetica) 240.0 0.0 true true 0 (Cu-s)]
] -80.0 MRshow
LT0
LC0 setrgbcolor
6009 4329 M
639 0 V
1224 768 M
27 0 V
33 0 V
34 0 V
33 0 V
34 1 V
34 1 V
33 -1 V
34 -1 V
33 1 V
34 5 V
34 5 V
33 6 V
34 -4 V
33 8 V
34 7 V
34 -6 V
33 5 V
34 -15 V
33 -3 V
34 15 V
34 -8 V
33 -8 V
34 -5 V
33 -2 V
34 1 V
34 1 V
33 3 V
34 6 V
33 5 V
34 -11 V
34 0 V
33 13 V
34 11 V
33 0 V
34 30 V
34 -2 V
33 -2 V
34 43 V
33 -38 V
34 -39 V
34 3 V
33 2 V
34 6 V
33 21 V
34 2 V
34 -34 V
33 -16 V
34 2 V
33 -2 V
34 2 V
34 -2 V
33 -5 V
34 1 V
33 -1 V
34 -1 V
34 0 V
33 0 V
34 4 V
33 7 V
34 -6 V
34 3 V
33 37 V
34 55 V
33 -38 V
34 -41 V
34 82 V
33 31 V
34 -68 V
33 -50 V
34 -14 V
34 2 V
33 34 V
34 9 V
33 -37 V
34 17 V
34 43 V
33 -39 V
34 6 V
33 24 V
34 33 V
34 2 V
33 -75 V
34 20 V
33 114 V
34 -43 V
34 -84 V
33 -4 V
34 4 V
33 2 V
34 -16 V
34 -6 V
33 -6 V
34 -2 V
33 0 V
34 0 V
34 0 V
33 0 V
34 5 V
33 4 V
34 -7 V
34 -2 V
33 0 V
stroke 4644 768 M
34 0 V
33 0 V
34 0 V
34 10 V
33 37 V
34 -17 V
33 -27 V
34 -3 V
34 1 V
33 26 V
34 77 V
33 -51 V
34 -49 V
34 -4 V
33 13 V
34 54 V
33 -20 V
34 -42 V
34 -2 V
33 37 V
34 115 V
33 224 V
34 -109 V
34 -132 V
33 -106 V
34 -11 V
33 29 V
34 61 V
34 66 V
33 -108 V
34 -63 V
33 25 V
34 90 V
34 10 V
33 -54 V
34 -18 V
33 22 V
34 -32 V
34 -4 V
33 0 V
34 -3 V
33 107 V
34 -65 V
34 -77 V
33 -7 V
34 1 V
33 31 V
34 110 V
34 -19 V
33 -9 V
34 -62 V
33 -43 V
34 -8 V
34 -1 V
33 0 V
34 1 V
33 16 V
34 31 V
34 -30 V
33 -17 V
34 -1 V
33 0 V
34 0 V
34 0 V
33 0 V
34 0 V
33 0 V
34 0 V
7 0 V
stroke
LT0
LC1 setrgbcolor
LTb
5865 4089 M
[ [(Helvetica) 240.0 0.0 true true 0 (O-p)]
] -80.0 MRshow
LT0
LC1 setrgbcolor
6009 4089 M
639 0 V
1224 768 M
27 0 V
33 0 V
34 0 V
33 0 V
34 11 V
34 29 V
33 -20 V
34 -18 V
33 22 V
34 134 V
34 80 V
33 34 V
34 -10 V
33 197 V
34 24 V
34 -43 V
33 188 V
34 -241 V
33 -67 V
34 224 V
34 -38 V
33 -63 V
34 -219 V
33 -131 V
34 203 V
34 137 V
33 7 V
34 -81 V
33 25 V
34 -166 V
34 -61 V
33 -31 V
34 -28 V
33 -20 V
34 76 V
34 1 V
33 -27 V
34 7 V
33 65 V
34 -14 V
34 -51 V
33 2 V
34 -2 V
33 -15 V
34 -51 V
34 -16 V
33 5 V
34 28 V
33 -10 V
34 -15 V
34 -27 V
33 24 V
34 119 V
33 -95 V
34 -77 V
34 -5 V
33 3 V
34 57 V
33 112 V
34 -90 V
34 101 V
33 300 V
34 103 V
33 -315 V
34 -213 V
34 188 V
33 114 V
34 287 V
33 520 V
34 -361 V
34 -494 V
33 19 V
34 110 V
33 -252 V
34 523 V
34 418 V
33 -784 V
34 -159 V
33 247 V
34 208 V
34 -28 V
33 -472 V
34 177 V
33 801 V
34 -234 V
34 -640 V
33 -17 V
34 30 V
33 -5 V
34 -139 V
34 -55 V
33 -43 V
34 -16 V
33 -1 V
34 0 V
34 0 V
33 0 V
34 0 V
33 0 V
34 0 V
34 0 V
33 0 V
stroke 4644 768 M
34 0 V
33 0 V
34 0 V
34 7 V
33 28 V
34 -13 V
33 -20 V
34 -2 V
34 1 V
33 24 V
34 69 V
33 -46 V
34 -45 V
34 -3 V
33 13 V
34 54 V
33 -20 V
34 -42 V
34 -1 V
33 38 V
34 53 V
33 95 V
34 -29 V
34 -71 V
33 -68 V
34 3 V
33 29 V
34 26 V
34 72 V
33 -85 V
34 -61 V
33 31 V
34 107 V
34 11 V
33 -38 V
34 -41 V
33 -37 V
34 -14 V
34 27 V
33 1 V
34 -22 V
33 69 V
34 -43 V
34 -53 V
33 -4 V
34 0 V
33 15 V
34 50 V
34 -23 V
33 -27 V
34 -3 V
33 -7 V
34 -5 V
34 0 V
33 0 V
34 0 V
33 5 V
34 9 V
34 -9 V
33 -5 V
34 0 V
33 0 V
34 0 V
34 0 V
33 0 V
34 0 V
33 0 V
34 0 V
7 0 V
stroke
1.000 UL
LTb
1224 4752 N
0 -3984 V
5712 0 V
0 3984 V
-5712 0 V
Z stroke
1.000 UP
1.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
